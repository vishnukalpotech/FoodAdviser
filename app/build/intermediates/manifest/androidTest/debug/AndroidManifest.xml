<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.foodadviser.test" >

    <uses-sdk
        android:minSdkVersion="11"
        android:targetSdkVersion="19" />

    <instrumentation
        android:name="android.test.InstrumentationTestRunner"
        android:functionalTest="false"
        android:handleProfiling="false"
        android:label="Tests for com.example.foodadviser.test"
        android:targetPackage="com.example.foodadviser.test" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
 <!-- GCM requires a Google account. -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
 <!-- Keeps the processor from sleeping when a message is received. -->
    <!-- Creates a custom permission so only this app can receive its messages. -->
    <permission
        android:name="com.example.foodadviser.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.example.foodadviser.permission.C2D_MESSAGE" />
 <!-- This app has permission to register and receive data message. -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
 <!-- Network State Permissions to detect Internet status -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 <!-- Permission to vibrate -->
    <uses-permission android:name="android.permission.VIBRATE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <application
        android:name="com.example.foodadviser.Controller"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <uses-library android:name="android.test.runner" />

        <activity
            android:name="com.example.foodadviser.MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.foodadviser.Register"
            android:label="@string/title_activity_register" >
        </activity>
        <activity
            android:name="com.example.foodadviser.RestaurantAdmin"
            android:label="@string/title_activity_restaurant_admin" >
        </activity>
        <activity
            android:name="com.example.foodadviser.User"
            android:label="@string/title_activity_user" >
        </activity>
        <activity
            android:name="com.example.foodadviser.Add_Food_Item"
            android:label="@string/title_activity_add__food__item" >
        </activity>
        <activity
            android:name="com.example.foodadviser.RestaurantList"
            android:label="@string/title_activity_restaurant_list" >
        </activity>
        <activity
            android:name="com.example.foodadviser.FoodDetails"
            android:label="@string/title_activity_food_details" >
        </activity>

        <receiver
            android:name="com.example.foodadviser.GCMBroadcastReceiver"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>

                <!-- Receives the actual messages. -->
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <!-- Receives the registration id. -->
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />

                <category android:name="com.example.foodadviser" />
            </intent-filter>
        </receiver>

        <service android:name="com.example.foodadviser.GCMIntentService" />

        <activity
            android:name="com.example.foodadviser.NewFood"
            android:label="@string/title_activity_new_food" >
        </activity>
        <activity
            android:name="com.example.foodadviser.BestRatedFood"
            android:label="@string/title_activity_best_rated_food" >
        </activity>
 <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:theme="@android:style/Theme.Translucent" />
        <activity
            android:name="com.google.android.gms.ads.purchase.InAppPurchaseActivity"
            android:theme="@style/Theme.IAPTheme" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <activity
            android:name="com.google.android.gms.appinvite.PreviewActivity"
            android:exported="true"
            android:theme="@style/Theme.AppInvite.Preview" >
            <intent-filter>
                <action android:name="com.google.android.gms.appinvite.ACTION_PREVIEW" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />

        <provider
            android:name="com.google.android.gms.measurement.AppMeasurementContentProvider"
            android:authorities="com.example.foodadviser.test.google_measurement_service"
            android:exported="false" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true" >
            <intent-filter>
                <action android:name="com.google.android.gms.measurement.UPLOAD" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
    </application>

</manifest>